---
import TableOfContents from "@/components/docs/table-of-contents";
import NextPrevNav from "@/components/ui/NextPrevNav.astro";
import WorldMap from "@/components/ui/world-map.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import generateToc from "@/lib/generateToc";
import { findPrevAndNextPages } from "@/lib/nextPrevPages";
import { proseClasses } from "@/lib/prose-classes";
import { getGithubEditUrl } from "@/scripts/github-edit";

import { getCollection } from "astro:content";
import clsx from "clsx";
import { LayoutGrid, PenLine } from "lucide-react";
export async function getStaticPaths() {
  const docs = await getCollection("docs");

  return docs?.map((doc) => ({
    params: { slug: doc.slug },
    props: { doc },
  }));
}

const { doc } = Astro.props;

const pathname = Astro.url.pathname;
const { Content, headings } = await doc.render();

// Extract first image from content
const extractFirstImage = (content: string) => {
  const imageRegex = /!\[.*?\]\((.*?)\)/;
  const match = content.match(imageRegex);
  return match ? match[1] : undefined;
};

const firstImage = extractFirstImage(doc.body);
---

<MainLayout
  image={firstImage}
  title={headings.find((h) => h.depth === 1)?.text}
  description={(() => {
    // Get the first h2 heading
    const h2Heading = headings.find((h) => h.depth === 2)?.text;
    // Get the first paragraph from the raw content and clean it
    const firstParagraph = doc.body
      ?.split("\n\n")[0]
      ?.replace(/^#.*\n/, "") // Remove title
      ?.replace(/```[\s\S]*?```/g, "") // Remove code blocks
      ?.replace(/\[([^\]]+)\]\([^)]+\)/g, "$1") // Convert markdown links to plain text
      ?.replace(/#/g, "") // Remove all # characters
      ?.replace(/\*\*/g, "") // Remove bold
      ?.replace(/\*/g, "") // Remove italic
      ?.replace(/`/g, "") // Remove inline code
      ?.replace(/\n/g, " ") // Replace newlines with spaces
      ?.replace(/\s+/g, " ") // Replace multiple spaces with single space
      ?.trim();

    // Limit description length to 160 characters
    const maxLength = 160;
    const combined =
      firstParagraph && h2Heading
        ? `${firstParagraph} ${h2Heading}`
        : h2Heading || firstParagraph || "";

    return combined.length > maxLength
      ? combined.substring(0, maxLength - 3) + "..."
      : combined;
  })()}
>
  <div class="grid grid-cols-1 lg:grid-cols-12 bg-[#FFFFFF] dark:bg-background">
    <WorldMap className="lg:col-span-9 2xl:col-span-10 w-full flex-1 ">
      <div class="min-h-[90dvh] sub-container pb-20 py-20 flex flex-col gap-10">
        <article class={clsx(proseClasses)}>
          <Content />
        </article>
        <a
          href={getGithubEditUrl(Astro)}
          class="py-4 text-foreground hover:text-primary font-medium border-y font-clash border-border items-center flex gap-3"
        >
          <PenLine size={16} />
          <p>Edit on GitHub</p>
        </a>
        <NextPrevNav nav={findPrevAndNextPages(pathname)} />
      </div>
    </WorldMap>
    <div
      class="bg-background-neutral overflow-y-auto sidebar-scroll border-l border-border lg:col-span-3 2xl:col-span-2 p-5 h-[calc(100dvh-80px)] hidden lg:block sticky top-[80px]"
    >
      <div
        class="bg-gray mb-3 text-sm font-bold flex gap-2 items-center px-2 py-1.5 rounded"
      >
        <LayoutGrid size={16} className="text-primary" />
        <p>On this page</p>
      </div>
      <TableOfContents
        labels={{ onThisPage: "On this page" }}
        client:load
        toc={generateToc(headings, "Overview")}
      />
    </div>
  </div>
</MainLayout>
